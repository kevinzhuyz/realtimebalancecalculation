apiVersion: apps/v1
kind: Deployment
metadata:
  name: accountbalancecalculation
  namespace: accountbalancecalculation
  labels:
    app: accountbalancecalculation
spec:
  replicas: 2
  selector:
    matchLabels:
      app: accountbalancecalculation
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: accountbalancecalculation
    spec:
      containers:
      - name: accountbalancecalculation
        image: registry.cn-hangzhou.aliyuncs.com/your-namespace/accountbalancecalculation:v1.0
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1000m"
            memory: "2Gi"
        env:
        - name: DB_URL
          value: "jdbc:mysql://your-rds-instance:3306/VTMSystem"
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: DB_PASSWORD
        - name: REDIS_HOST
          value: "your-redis-instance"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: REDIS_PASSWORD
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 5
      volumes:
      - name: config-volume
        configMap:
          name: app-config 